<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starcloud.ops.business.mission.dal.mysql.SingleMissionMapper">
    <select id="selectIds" resultType="java.lang.Long">
        select m.id
        from llm_single_mission m
        inner join llm_notification n on m.notification_Uid = n.uid
        where m.deleted = false
        and n.start_time &lt;= now()
        and (m.pre_settlement_time is null or m.pre_settlement_time &lt; DATE_SUB(NOW(), INTERVAL 6 hour))
        and (m.run_time is null or m.run_time &lt;= DATE_SUB(NOW(), INTERVAL 6 hour))
        and m.status in ('published','pre_settlement')
        and n.end_time &gt; now()
        <if test="reqVO.singleMissionType != null and reqVO.singleMissionType != ''">
            and n.type = #{reqVO.singleMissionType} and m.type = #{reqVO.singleMissionType}
        </if>
        order by m.id
        <if test="reqVO.limitSize != null and reqVO.limitSize > 0">
            limit #{reqVO.limitSize}
        </if>
    </select>

    <select id="selectSettlementIds" resultType="java.lang.Long">
        select m.id
        from llm_single_mission m
        inner join llm_notification n on m.notification_Uid = n.uid
        where m.deleted = false
        and n.start_time &lt; now()
        and m.status in ('published','pre_settlement','claimed')
        and (m.settlement_time is null or (m.settlement_time &lt; DATE_SUB(NOW(), INTERVAL 6 hour) and m.settlement_time &gt; DATE_SUB(NOW(), INTERVAL 3 day)))
        -- and (m.run_time is null or (m.run_time &lt; DATE_SUB(NOW(), INTERVAL 6 hour) and m.run_time &gt; DATE_SUB(NOW(), INTERVAL 3 day)))
        and n.end_time &lt;= now()
        <if test="reqVO.singleMissionType != null and reqVO.singleMissionType != ''">
            and n.type = #{reqVO.singleMissionType} and m.type = #{reqVO.singleMissionType}
        </if>
        order by m.update_time
        <if test="reqVO.limitSize != null and reqVO.limitSize > 0">
            limit #{reqVO.limitSize}
        </if>
    </select>


    <select id="retryIds" resultType="java.lang.Long">
        select m.id
        from llm_single_mission m
        inner join llm_notification n on m.notification_Uid = n.uid
        where m.deleted = false
        and n.start_time &lt; now()
        and m.status in ('settlement_error','pre_settlement_error')
        and (m.run_time is null or m.run_time &lt;= DATE_SUB(NOW(), INTERVAL 10 MINUTE))
<!--        and n.end_time &lt;= now()-->
        <if test="reqVO.singleMissionType != null and reqVO.singleMissionType != ''">
            and n.type = #{reqVO.singleMissionType} and m.type = #{reqVO.singleMissionType}
        </if>
        order by m.update_time
        <if test="reqVO.limitSize != null and reqVO.limitSize > 0">
            limit #{reqVO.limitSize}
        </if>
    </select>

    <select id="pageCount" resultType="java.lang.Long">
        select count(*)
        from llm_single_mission m
        left join member_user u on m.claim_user_id = u.id
        where m.deleted = false and m.notification_Uid = #{reqVO.notificationUid}
        <if test="reqVO.status != null and reqVO.status != ''">
            and m.status = #{reqVO.status}
        </if>
        <if test="reqVO.claimUserId != null and reqVO.claimUserId != ''">
            and m.claim_user_id = #{reqVO.claimUserId}
        </if>
        <if test="reqVO.claimUsername != null and reqVO.claimUsername != ''">
            and u.nickname like concat(#{reqVO.claimUsername},'%')
        </if>
    </select>

    <select id="pageDetail" resultType="com.starcloud.ops.business.mission.dal.dataobject.SingleMissionDTO">
        select m.*, n.liked_count as likedCount,n.collected_count as collectedCount,n.comment_count as
        commentCount, u.nickname as claimUsername
        from llm_single_mission m
        left join llm_xhs_note_detail n on m.note_detail_id = n.id
        left join member_user u on m.claim_user_id = u.id
        where m.deleted = false and m.notification_Uid = #{reqVO.notificationUid}
        <if test="reqVO.status != null and reqVO.status != ''">
            and m.status = #{reqVO.status}
        </if>
        <if test="reqVO.claimUserId != null and reqVO.claimUserId != ''">
            and m.claim_user_id = #{reqVO.claimUserId}
        </if>
        <if test="reqVO.claimUsername != null and reqVO.claimUsername != ''">
            and u.nickname like concat(#{reqVO.claimUsername},'%')
        </if>
        order by m.create_time desc
        limit #{start},#{size}
    </select>

    <select id="export"
            resultType="com.starcloud.ops.business.mission.controller.admin.vo.response.SingleMissionExportVO">
        select m.uid as uid,
        n.name as notificationName,
        json_unquote(JSON_EXTRACT(m.content, '$.title')) as contentTitle,
        json_unquote(JSON_EXTRACT(m.content, '$.text')) as contentText,
        json_unquote(JSON_EXTRACT(m.content, '$.picture')) as contentPicture,
        m.status as status,
        m.claim_username as claimUsername,
        m.claim_time as claimTime,
        m.publish_time as publishTime,
        m.publish_url as publishUrl,
        d.liked_count as likedCount,
        d.comment_count as commentCount,
        m.estimated_amount as estimatedAmount,
        m.pre_settlement_time as preSettlementTime,
        m.settlement_amount as settlementAmount,
        m.settlement_time as settlementTime,
        m.payment_order as paymentOrder
        from llm_single_mission m
        inner join llm_notification n on m.notification_Uid = n.uid
        left join llm_xhs_note_detail d on m.note_detail_id = d.id
        where m.deleted = false
        and n.deleted = false
        and m.notification_Uid = #{reqVO.notificationUid}
        <if test="reqVO.status != null and reqVO.status != ''">
            and m.status = #{reqVO.status}
        </if>
        <if test="reqVO.claimUsername != null and reqVO.claimUsername != ''">
            and m.claim_username like concat(#{reqVO.claimUsername},'%')
        </if>
        <if test="reqVO.claimUserId != null and reqVO.claimUserId != ''">
            and m.claim_user_id = #{reqVO.claimUserId}
        </if>
    </select>

    <select id="detail" resultType="com.starcloud.ops.business.mission.dal.dataobject.MissionNotificationDTO">
        select m.*, n.name as notificationName
        from llm_single_mission m
                 left join llm_notification n on m.notification_Uid = n.uid
        where m.deleted = false
          and m.uid = #{uid}
    </select>

    <select id="claimedMissionCount" resultType="java.lang.Long">
        select count(*)
        from llm_single_mission
        where deleted = false and claim_user_id = #{reqVO.claimUserId}
        <if test="reqVO.singleMissionStatus != null and reqVO.singleMissionStatus != ''">
            <choose>
                <when test="reqVO.singleMissionStatus == 'published'">
                    and status in ('published','pre_settlement')
                </when>
                <otherwise>
                    and status = #{reqVO.singleMissionStatus}
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="claimedMissionPage" resultType="com.starcloud.ops.business.mission.dal.dataobject.MissionNotificationDTO">
        select m.*, n.name as notificationName
        from llm_single_mission m
                 left join llm_notification n on m.notification_Uid = n.uid
        where m.deleted = false
        and m.claim_user_id = #{reqVO.claimUserId}
        <if test="reqVO.singleMissionStatus != null and reqVO.singleMissionStatus != ''">
            <choose>
                <when test="reqVO.singleMissionStatus == 'published'">
                    and m.status in ('published','pre_settlement')
                </when>
                <when test="reqVO.singleMissionStatus == 'pre_settlement_error'">
                    and m.status in ('pre_settlement_error','settlement_error')
                </when>
                <otherwise>
                    and m.status = #{reqVO.singleMissionStatus}
                </otherwise>
            </choose>
        </if>
        order by m.claim_time desc
        limit #{start},#{size}
    </select>
</mapper>