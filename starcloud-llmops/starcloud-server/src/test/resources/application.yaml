spring:
  main:
    lazy-initialization: true # 开启懒加载，加快速度
    banner-mode: off # 单元测试，禁用 Banner

--- #################### 数据库相关配置 ####################

spring:
  # 数据源配置项
  datasource:
    name: ruoyi-vue-pro
    url: jdbc:h2:mem:testdb;MODE=MYSQL;DATABASE_TO_UPPER=false;NON_KEYWORDS=value; # MODE 使用 MySQL 模式；DATABASE_TO_UPPER 配置表和字段使用小写
#    driver-class-name: org.h2.Driver
    username: sa
    password:
    druid:
      async-init: true # 单元测试，异步初始化 Druid 连接池，提升启动速度
      initial-size: 1 # 单元测试，配置为 1，提升启动速度
  sql:
    init:
#      schema-locations: classpath:/sql/create_tables.sql

  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  redis:
    host: 127.0.0.1 # 地址
    port: 16379 # 端口（单元测试，使用 16379 端口）
    database: 0 # 数据库索引

mybatis:
  type-aliases-package: ${yudao.info.base-package}.module.*.dal.dataobject
  lazy-initialization: true # 单元测试，设置 MyBatis Mapper 延迟加载，加速每个单元测试

--- #################### 定时任务相关配置 ####################

--- #################### 配置中心相关配置 ####################

--- #################### 服务保障相关配置 ####################

# Lock4j 配置项（单元测试，禁用 Lock4j）

# Resilience4j 配置项

--- #################### 监控相关配置 ####################

--- #################### 芋道相关配置 ####################

# 芋道配置项，设置当前项目所有自定义的配置
yudao:
  info:
    base-package: cn.iocoder.yudao.module

# 日志文件配置
logging:
  level:
    # 配置自己写的 MyBatis Mapper 打印日志
    cn.iocoder.yudao.module.bpm.dal.mysql: debug
    cn.iocoder.yudao.module.infra.dal.mysql: debug
    cn.iocoder.yudao.module.infra.dal.mysql.job.JobLogMapper: INFO # 配置 JobLogMapper 的日志级别为 info
    cn.iocoder.yudao.module.pay.dal.mysql: debug
    cn.iocoder.yudao.module.pay.dal.mysql.notify.PayNotifyTaskMapper: INFO # 配置 JobLogMapper 的日志级别为 info
    cn.iocoder.yudao.module.system.dal.mysql: debug
    cn.iocoder.yudao.module.tool.dal.mysql: debug
    cn.iocoder.yudao.module.member.dal.mysql: debug
    cn.iocoder.yudao.module.trade.dal.mysql: debug
    cn.iocoder.yudao.module.promotion.dal.mysql: debug


kstry:
#  thread:
#    pool:
#      core-size: 0 # Kstry 线程池核心线程数。 默认：CPU核心数>2时取CPU核心数，否则取2
#      max-size: 0 #  Kstry 线程池最大线程数。 默认：核心线程数*2
#      keep-alive-time: 10 # Kstry 线程池空闲存活时间。 默认：10分钟，单位：分钟
#      queue-size: 5000 # Kstry 线程池阻塞队列长度。  默认：10000
#      shutdown-await: 3000 # 调用线程池 shutdown() 之后，时隔几毫秒后check关闭状态。 默认：3000，单位：毫秒
#      shutdown-now-await: 3000 # 调用线程池 shutdown() 失败之后再调用 shutdownNow() 时隔几毫秒后check关闭状态。 默认：5000，单位：毫秒
#      monitor:
#        enable: true # 是否开启线程池的监控日志。 默认：true
#        delay: 5000 # 线程池监控日志打印间隔时间。 默认：10000ms，单位：毫秒
  story:
    tracking:
      log: true # 是否打印回溯log，默认为 false
#
starcloud-llm:
  vector:
    store=: default